/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package bank.action;

import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import bank.DBLogic;
import bank.form.LoginForm;
import java.util.ArrayList;
import java.sql.ResultSet;
public class LoginAction extends HttpServlet {
	
	public void service(HttpServletRequest request, HttpServletResponse response)
	throws ServletException, IOException 
	{
		String Login=request.getParameter("Login");
		String reg=request.getParameter("reg");
		String Logout=request.getParameter("Logout");
		String AddEmployee=request.getParameter("AddEmployee");
		String ViewEmploye=request.getParameter("ViewEmploye");
		String View=request.getParameter("View");
		String EditEmployee=request.getParameter("EditEmployee");
		String RetrieveDetails=request.getParameter("RetrieveDetails");
		String ApplyChanges=request.getParameter("ApplyChanges");
		String DeleteEmployee=request.getParameter("DeleteEmployee");
		String deleteEmployee=request.getParameter("deleteEmployee");
		String ConfirmationDelete=request.getParameter("ConfirmationDelete");
		String Noticedetail=request.getParameter("Noticedetail");
		String ViewNoticeDetails=request.getParameter("ViewNoticeDetails");
		String AddLoan=request.getParameter("AddLoan");
		String DeleteLoan=request.getParameter("DeleteLoan");
		String deleteLoan=request.getParameter("deleteLoan");
		String ConfirmedDelete=request.getParameter("ConfirmedDelete");
		String EditLoan=request.getParameter("EditLoan");
		String editLoan=request.getParameter("editLoan");
		String DeleteCustomerAccount=request.getParameter("DeleteCustomerAccount");
		String delete=request.getParameter("delete");
		String Verify=request.getParameter("Verify");
		String ApproveNRejectCustomer=request.getParameter("ApproveNRejectCustomer");
		String Approve=request.getParameter("Approve");
		String Reject=request.getParameter("Reject");
		String ApproveORReject=request.getParameter("ApproveORReject");
		String ApproveNRejectCustomerloan=request.getParameter("ApproveNRejectCustomerloan");
		String ApproveORRejectloan=request.getParameter("ApproveORRejectloan");
		String Approvel=request.getParameter("Approvel");
		String Rejectl=request.getParameter("Rejectl");
		String Update=request.getParameter("Update");
		String AddNotice=request.getParameter("AddNotice");
		String DelNotice=request.getParameter("DelNotice");
		String ApplyToDelete=request.getParameter("ApplyToDelete");
		String Deposite=request.getParameter("Deposite");
		String Withdraw=request.getParameter("Withdraw");
		String view=request.getParameter("view");
		String Transfer=request.getParameter("Transfer");
		String RetrieveLoan=request.getParameter("RetrieveLoan");
		String ApplyForLoan=request.getParameter("ApplyForLoan");
		String AnyNotice=request.getParameter("AnyNotice");
		String Deletion=request.getParameter("Deletion");
		String Viewprofile=request.getParameter("Viewprofile");
		String Editp=request.getParameter("Editp");
		String Editprofile=request.getParameter("Editprofile");
		if(Login!=null)
  {
		     String uname =request.getParameter("uname");
		     String pwd = request.getParameter("password");
		     String type =request.getParameter("type");
		     String status = null;
		     String SL_NO=null;
	         DBLogic dblogic = new DBLogic();
	        //String msg = "You Have Not Approved";/
	         System.out.println(uname+pwd+type);
	                try
	                   {
	                      ResultSet rs = dblogic.RetrievedLogin(uname,pwd,type);
	                      while(rs.next()){
		                      status = rs.getString("STATUSFORACCOUNT");
		                      SL_NO=rs.getString("SL_NO");
		                       if(type.equalsIgnoreCase("customer")&& status.equalsIgnoreCase("approved")){
		                    	   request.getSession().setAttribute("uname",uname);
		                    	   request.getSession().setAttribute("SL_NO", SL_NO);
			                     RequestDispatcher rd=request.getRequestDispatcher("/UserHome.jsp");
			                    rd.forward(request,response);
		                          }
		            else if(type.equalsIgnoreCase("admin") && status.equalsIgnoreCase("approved")){
			         request.getSession().setAttribute("ADMIN", "ADMIN");
			      RequestDispatcher rd=request.getRequestDispatcher("/Admin Home.jsp");
			        rd.forward(request,response);
			               }	
	                   }
	                      response.sendRedirect("Login.jsp");
	                 }
	         catch(Exception ea)
	           {
		     System.out.println("some error"+ea);
	            }
 }
	
		
		
		if(reg!=null)
{
		
			System.out.println("reg 1");
			DBLogic dblogic=new DBLogic();
			String name=request.getParameter("name");
			String address=request.getParameter("address");
			String phone=request.getParameter("phone");
			String email=request.getParameter("email");
			String occupation=request.getParameter("occupation");
			String income=request.getParameter("income");
			String uname=request.getParameter("uname");
			String password=request.getParameter("password");
			String pwd=request.getParameter("pwd");
			String previousaccount=request.getParameter("previousaccount");
			String date=request.getParameter("date");
			String gender=request.getParameter("gender");
			System.out.println(name+address+phone+email+occupation+income+uname+password+pwd+previousaccount+date+gender);
			int i=0;
			try
			{
			i=dblogic.newRegister(name,address,phone,email,occupation,income,uname,password,pwd,previousaccount,date,gender);
			if(i>0)
			{
				ResultSet rs=dblogic.getAccno(name,address,phone);
				while(rs.next())
				{
					LoginForm loginForm =new LoginForm();
					Long accno=rs.getLong("ACCOUNTNO");
					System.out.println(accno);
				//	loginForm.setAccount(Long.toString(accno));
					request.setAttribute("key",accno);
					System.out.println("hello");
					RequestDispatcher rd=request.getRequestDispatcher("/RegSuccess.jsp");
					rd.forward(request,response);
					
				}
			}
			System.out.println("inserted...");
			
			
			}
			catch(Exception e)
			{
			System.out.println("some error"+e);
			}
		
}
		
		
		if(AddEmployee!=null)
		{
	System.out.println("add 1");
	DBLogic dblogic=new DBLogic();
	String name=request.getParameter("name");
	String address=request.getParameter("address");
	String gender=request.getParameter("gender");
	String phone=request.getParameter("phone");
	String email=request.getParameter("email");
	String designation=request.getParameter("designation");
	String grade=request.getParameter("grade");
	String sal=request.getParameter("sal");
	String dept=request.getParameter("dept");
	
	System.out.println(name+address+gender+phone+email+designation+grade+sal+dept);
	int i=0;
	try
	{
	i=dblogic.newAdd(name,address,gender,phone,email,designation,grade,sal,dept);
	System.out.println("i");
	RequestDispatcher rd=request.getRequestDispatcher("/Add Employee.jsp");
			rd.forward(request,response);
	
	}
	catch(Exception e)
	{	
	System.out.println(e);
}
}
		
	if(ViewEmploye!=null)
 {

		System.out.println("viewemployee");
	DBLogic dblogic = new DBLogic();
	ArrayList<String> empid= new ArrayList<String>();
	ArrayList<String> ename = new ArrayList<String>();
	try
	{
	ResultSet rs = dblogic.ViewUser();
	while(rs.next()){
		empid.add(Long.toString(rs.getLong("EMPID")));
		ename.add(rs.getString("NAME"));
	}
	request.setAttribute("EMPID", empid);
	request.setAttribute("ENAME", ename);
	
	
	RequestDispatcher rd=request.getRequestDispatcher("/View Employee.jsp");
	rd.forward(request,response);

	
}
		 
	catch(Exception e)
	{
		System.out.println(e);
	}
		
		
		
}
	
	if(View!=null)
	{
		DBLogic dblogic = new DBLogic();
		LoginForm loginform =new LoginForm();
		Long id=Long.parseLong(request.getParameter("cename"));
		System.out.println(id);
		try
		{
		ResultSet rs =dblogic.View1User(id);
		if(rs.next()){
			loginform.setId1(rs.getLong("EMPID"));
			loginform.setAddress(rs.getString("ADDRESS"));
			loginform.setPhone(rs.getLong("PHONENO"));
			loginform.setEmail(rs.getString("EMAIL"));
			loginform.setDesignation(rs.getString("DESIGNATION"));
			loginform.setGrade(rs.getString("GRADE"));
			loginform.setSal(rs.getString("SALARY"));
			request.setAttribute("key",loginform);
			RequestDispatcher rd=request.getRequestDispatcher("/View Employee1.jsp");
			rd.forward(request,response);

	}
	
		}
		catch (Exception e) {
			// TODO: handle exception
		}
	
	
	}
	
	
	
	
	
	
	
	
	
	
	
	if(EditEmployee!=null)
{
		System.out.println("editemployee");
		
	
	DBLogic dblogic = new DBLogic();
	ArrayList<String> empid= new ArrayList<String>();
	ArrayList<String> ename = new ArrayList<String>();
	try
	{
	ResultSet rs = dblogic.EditUser();
	while(rs.next()){
		empid.add(Long.toString(rs.getLong("EMPID")));
		ename.add(rs.getString("NAME"));
	}
	request.setAttribute("EMPID", empid);
	request.setAttribute("ENAME", ename);
	RequestDispatcher rd=request.getRequestDispatcher("/Edit Employee.jsp");
	rd.forward(request,response);
	}
	catch(Exception e)
	{
     System.out.println(e);
	}
		
}	
	if(RetrieveDetails!=null)
	{
		System.out.println("rt");
		DBLogic dblogic = new DBLogic();
		LoginForm loginform =new LoginForm();
		String cename=request.getParameter("cename");
		Long id=Long.parseLong(cename);
		System.out.println(id);
		try
		{
		ResultSet rs =dblogic.RetrieveUser(id);
		if(rs.next()){
			loginform.setId1(rs.getLong("EMPID"));
			loginform.setName(rs.getString("NAME"));
			loginform.setAddress(rs.getString("ADDRESS"));
			loginform.setGender(rs.getString("GENDER"));
			loginform.setPhone(rs.getLong("PHONENO"));
			loginform.setEmail(rs.getString("EMAIL"));
			loginform.setDesignation(rs.getString("DESIGNATION"));
			loginform.setGrade(rs.getString("GRADE"));
			loginform.setSal(rs.getString("SALARY"));
		}
		request.setAttribute("key",loginform);
		RequestDispatcher rd=request.getRequestDispatcher("/Update Employee.jsp");
		rd.forward(request,response);
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
		}
	 if(ApplyChanges!=null)
	 {
		// System.out.println("hello");
		DBLogic dblogic = new DBLogic();
		LoginForm loginform =new LoginForm();
		//System.out.println("haha");
		String id=request.getParameter("id1");
		//System.out.println("byebye");
		//long id=Long.parseLong(id1);
		//System.out.println("byebye1");
		System.out.println("EMPID: "+id);
		String name = request.getParameter("name");
		String gender = request.getParameter("gender");
		String address =request.getParameter("address");
		String phone = request.getParameter("phone");
		//Long phone =Long.parseLong(phone1);
		String email = request.getParameter("email");
		String designation =request.getParameter("designation");
		String grade = request.getParameter("grade");
		String sal= request.getParameter("sal");
		
		int i = 0;
		try
		{
		i = dblogic.UpdateUser(name,gender, address,phone,email,designation,grade,sal,id);
		if(i>0)
		 {
			System.out.println("entry2");
			RequestDispatcher rd=request.getRequestDispatcher("/Admin Home.jsp");
			rd.forward(request,response);
			
		}
		RequestDispatcher rd=request.getRequestDispatcher("/Admin Home.jsp");
		rd.forward(request,response);
		System.out.println("entry3");
		}
		catch (Exception e) {
			System.out.println(e);
		}
	}
	if(DeleteEmployee!=null)
	{
		DBLogic dblogic = new DBLogic();
	ArrayList<String> empid= new ArrayList<String>();
	ArrayList<String> ename = new ArrayList<String>();
	try
	{
		
	
	ResultSet rs = dblogic.Deleteemployee();
	while(rs.next()){
		empid.add(Long.toString(rs.getLong("EMPID")));
		ename.add(rs.getString("NAME"));
	}
	request.setAttribute("EMPID", empid);
	request.setAttribute("ENAME", ename);
	RequestDispatcher rd=request.getRequestDispatcher("/Delete Employee.jsp");
	rd.forward(request,response);
	System.out.println("entry3");
	}catch(Exception e)
	{
		System.out.println(e);
	}
	}
	if(deleteEmployee!=null)
	{
		LoginForm loginform = new LoginForm();
		DBLogic dblogic = new DBLogic();
		String Id1=request.getParameter("ename");
		try
		{
		Long id=Long.parseLong(Id1);
		ResultSet rs=dblogic.Delete(id);
		while(rs.next())
		{
			loginform.setId1(rs.getLong("EMPID"));
			loginform.setName(rs.getString("NAME"));
			loginform.setAddress(rs.getString("ADDRESS"));
			loginform.setGender(rs.getString("GENDER"));
			loginform.setPhone(rs.getLong("PHONENO"));
			loginform.setEmail(rs.getString("EMAIL"));
			loginform.setDesignation(rs.getString("DESIGNATION"));
			loginform.setGrade(rs.getString("GRADE"));
			loginform.setSal(rs.getString("SALARY"));
		}
		request.setAttribute("key", loginform);
		RequestDispatcher rd=request.getRequestDispatcher("/Delete Employee Confirmation.jsp");
		rd.forward(request,response);
	}
	catch(Exception e)
	{
		System.out.println(e);
	}
	}
			
		if(ConfirmationDelete!=null)
		{
			
			DBLogic dblogic = new DBLogic();
		     
		     Long id=Long.parseLong(request.getParameter("Id1"));
			int i=0;
			try
			{
			i = dblogic.confDelete(id);
			System.out.println("Deleted:"+i);
			//RequestDispatcher rd=request.getRequestDispatcher("/Delete Employee Confirmation.jsp");
			//rd.forward(request,response);
			response.sendRedirect("Admin Home.jsp");
			}
			catch(Exception e)
			{
				System.out.println(e);
			}
		}
		
		if(Logout!=null)
		{
			
			
			request.getSession().removeAttribute("ADMIN");
			request.getSession().invalidate();
			response.sendRedirect("PreLogin.jsp");
		}
		
				
		if(DeleteLoan!=null)
		{
			System.out.println("DeleteLoan");
			DBLogic dblogic = new DBLogic();
			ArrayList<String> loanid= new ArrayList<String>();
			ArrayList<String> category = new ArrayList<String>();
			try
			{
			ResultSet rs = dblogic.DeleteLoan();
			while(rs.next()){
				loanid.add(Long.toString(rs.getLong("LOANID")));
				category.add(rs.getString("CATEGORY"));
			}
			request.setAttribute("LOANID", loanid);
			request.setAttribute("CATEGORY", category);
			RequestDispatcher rd=request.getRequestDispatcher("/Delete Loan.jsp");
			rd.forward(request,response);
			}
			catch (Exception e) {
				// TODO: handle exception
			}
		}
		if(deleteLoan!=null)
		{
			LoginForm loginform =new LoginForm();
			DBLogic dblogic = new DBLogic();
			Long id=Long.parseLong(request.getParameter("loan"));
			try
			{
			ResultSet rs=dblogic.DeleteLoan1(id);
			while(rs.next())
			{
				loginform.setId1(rs.getLong("LOANID"));
				loginform.setCategory(rs.getString("CATEGORY"));
				loginform.setRate(rs.getString("RATEOFINTEREST"));
				loginform.setAmount(rs.getString("MAXIMUMAMOUNTLIMIT"));
				loginform.setDate(rs.getString("MAXIMUMTIMEPERIOD"));
				
			}
			request.setAttribute("key",loginform );
			RequestDispatcher rd=request.getRequestDispatcher("/Loan Delete Confirmation.jsp");
			rd.forward(request,response);
			}
			catch (Exception e) {
				// TODO: handle exception
			}
			 
		}
		if(ConfirmedDelete!=null)
		{
		
		DBLogic dblogic = new DBLogic();
		Long id=Long.parseLong(request.getParameter("id1"));
	   
		int i=0;
		try
		{
		i = dblogic.confDeleteloan(id);
		System.out.println("Deleted:"+i);
		response.sendRedirect("Admin Home.jsp");
		}
		catch (Exception e) {
			// TODO: handle exception
		}
		}
		
		if(EditLoan!=null)
		{
			System.out.println("Editloan");
			
			DBLogic dblogic = new DBLogic();
			ArrayList<String> loanid= new ArrayList<String>();
			ArrayList<String> category = new ArrayList<String>();
			try
			{
			ResultSet rs = dblogic.EditLoan1();
			while(rs.next()){
				loanid.add(Long.toString(rs.getLong("LOANID")));
				category.add(rs.getString("CATEGORY"));
			}
			request.setAttribute("LOANID", loanid);
			request.setAttribute("CATEGORY", category);
			
			RequestDispatcher rd=request.getRequestDispatcher("/Edit Loan.jsp");
			rd.forward(request,response);
			
			
			}
			catch(Exception e)
			{
				
			}
			}
		
		if(editLoan!=null)
		{
			DBLogic dblogic = new DBLogic();
			LoginForm loginform =new LoginForm();
			Long id=Long.parseLong(request.getParameter("loan"));
			System.out.println(id);
			try
			{
			ResultSet rs =dblogic.RetrieveLoan(id);
			if(rs.next()){
				loginform.setId1(rs.getLong("LOANID"));
				loginform.setCategory(rs.getString("CATEGORY"));
				loginform.setRate(rs.getString("RATEOFINTEREST"));
				loginform.setAmount(rs.getString("MAXIMUMAMOUNTLIMIT"));
				loginform.setDate(rs.getString("MAXIMUMTIMEPERIOD"));
			}
			request.setAttribute("key",loginform );
			RequestDispatcher rd=request.getRequestDispatcher("/Edit Loan1.jsp");
			rd.forward(request,response);
			}
			catch(Exception e)
			{
				
			}
		}
		
		
		
	if(DeleteCustomerAccount!=null)
	{
		System.out.println("DeleteCustomerAccount");
		
		DBLogic dblogic = new DBLogic();
		ArrayList<String> accountno= new ArrayList<String>();
		try
		{
		ResultSet rs = dblogic.Deleteaccount();
		while(rs.next()){
			System.out.println(rs.getLong("ACCOUNTNO"));
			accountno.add(Long.toString(rs.getLong("ACCOUNTNO")));
				}
		request.setAttribute("ACCOUNTNO", accountno);
		RequestDispatcher rd=request.getRequestDispatcher("/Delete Account(For Admin).jsp");
		rd.forward(request,response);
//		return mapping.findForward("deleteaccount");
		
		}
		catch(Exception e)
		{
			
		}
	
	}
	if(Verify!=null)
	{
		System.out.println("hello");
		LoginForm loginform =new LoginForm();
		DBLogic dblogic = new DBLogic();
		Long id=Long.parseLong(request.getParameter("account"));
		System.out.println(id);
		try
		{
		ResultSet rs=dblogic.Deleteaccount1(id);
		while(rs.next())
		{
			System.out.println("hello haha");
			//loginform.setId(rs.getString("SL_NO"));
			loginform.setAccount(rs.getString("ACCOUNTNO"));
			loginform.setName(rs.getString("NAME"));
			loginform.setAddress(rs.getString("ADDRESS"));
			loginform.setOccupation(rs.getString("OCCUPATION"));
			loginform.setCename(rs.getString("cid"));
			System.out.println("hello1 haha2");	
		}
		//return mapping.findForward("deleteaccount1");
		System.out.println("hello1 haha3");
		request.setAttribute("key",loginform);
		RequestDispatcher rd=request.getRequestDispatcher("/Delete Account(For Admin)1.jsp");
		rd.forward(request,response);
		}
		catch (Exception e) {
			// TODO: handle exception
		}
	}
	if(delete!=null)
	{
		System.out.println("hello");
		LoginForm loginform =new LoginForm();
		DBLogic dblogic = new DBLogic();
		Long id=Long.parseLong(request.getParameter("account"));
		System.out.println("hello1");
		Long cd=Long.parseLong(request.getParameter("cd"));
		System.out.println("hello2");
		System.out.println(request.getParameter("cd"));
		System.out.println("hello3");
		int i=0;
		try
		{
			System.out.println(id);
		i=dblogic.Deleteaccount2(cd);
		System.out.println("Deleted:"+i);
		response.sendRedirect("Admin Home.jsp");
		}
		catch (Exception e) {
			// TODO: handle exception
		
}
}
	
	
	
	
	
	
	
	
	
	
	
	if(ApproveNRejectCustomer!=null)
	{
		System.out.println("ApproveNRejectCustomer");
	
	DBLogic dblogic = new DBLogic();
	ArrayList<String> accountno= new ArrayList<String>();
	ArrayList<String> name = new ArrayList<String>();
	try
	{
	ResultSet rs = dblogic.ApproveNRejectUser();
	while(rs.next()){
		accountno.add(Long.toString(rs.getLong("ACCOUNTNO")));
		name.add(rs.getString("NAME"));
	}
	request.setAttribute("ACCOUNTNO", accountno);
	request.setAttribute("NAME", name);
	
	RequestDispatcher rd=request.getRequestDispatcher("/ApproveNRejectCustomer.jsp");
	rd.forward(request,response);
	
	}
	catch(Exception e)
	{
		System.out.println(e);
	}
	
	}
	if(ApproveORReject!=null)
		{
		
		DBLogic dblogic = new DBLogic();
		LoginForm loginform =new LoginForm();
		Long id=Long.parseLong(request.getParameter("customer"));
		System.out.println(id);
		try
		{
		ResultSet rs =dblogic.ApproveUser(id);
		if(rs.next()){
			loginform.setId1(rs.getLong("ACCOUNTNO"));
			loginform.setName(rs.getString("NAME"));
			loginform.setAddress(rs.getString("ADDRESS"));
			loginform.setGender(rs.getString("GENDER"));
			loginform.setPhone(rs.getLong("PHONENO"));
			loginform.setEmail(rs.getString("EMAIL"));
			loginform.setOccupation(rs.getString("OCCUPATION"));
			loginform.setUname(rs.getString("USERNAME"));
			loginform.setPassword(rs.getString("PASSWORD"));
			loginform.setStatus(rs.getString("STATUSFORACCOUNT"));
			
			request.setAttribute("key",loginform);
			RequestDispatcher rd=request.getRequestDispatcher("/Approve N Reject Customer For Account.jsp");
			rd.forward(request,response);
			
		}
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
		
		//return mapping.findForward("approve");
		
		
		}
		if(Reject!=null)
		{
			
			DBLogic dblogic = new DBLogic();
			String id1 = request.getParameter("id1");
			Long id = Long.parseLong(id1);
			System.out.println("ID"+id);
			int i=0;
			try
			{
			i = dblogic.Rejected(id);
			System.out.println("Deleted:"+i);
			//return mapping.findForward("reject");
			response.sendRedirect("Admin Home.jsp");
			}
			catch(Exception e)
			{
			}
			}
		
		
		if(Approve!=null)
		{
			
			DBLogic dblogic = new DBLogic();
			String id1 = request.getParameter("id1");
			Long id = Long.parseLong(id1);
			System.out.println("ID: "+id);
			int i=0;
			try
			{
				
			i = dblogic.Approved(id);
			
			
			System.out.println("Appoved:"+i);
		//return mapping.findForward("approve1");
			response.sendRedirect("Admin Home.jsp");
			
			
			}
			catch (Exception e) {
				// TODO: handle exception
			}
		}
	
		if(ApproveNRejectCustomerloan!=null)
		{
			System.out.println("ApproveNRejectCustomerloan");
			
			DBLogic dblogic = new DBLogic();
			ArrayList<String> accountno= new ArrayList<String>();
			//ArrayList<String> name = new ArrayList<String>();

			System.out.println("ApproveNRejectCustomerloan1");
			try
			{
			ResultSet rs = dblogic.ApproveNRejectUserloan();
			while(rs.next()){
				System.out.println("ApproveNRejectCustomerloan2");
				accountno.add(Long.toString(rs.getLong("ACCOUNTNO")));
				//name.add(rs.getString("CATAGORY"));
				System.out.println("ApproveNRejectCustomerloan3");
			}
			request.setAttribute("ACCOUNTNO", accountno);
			//request.setAttribute("NAME", name);
			
			RequestDispatcher rd=request.getRequestDispatcher("/ApproveNRejectCustomerloan.jsp");
			rd.forward(request,response);
			
			}
			catch(Exception e)
			{
				System.out.println(e);
			}
		}
		
		if(ApproveORRejectloan!=null)
		{
			DBLogic dblogic = new DBLogic();
			LoginForm loginform =new LoginForm();
			Long id=Long.parseLong(request.getParameter("customer"));
			System.out.println(id);
			try
			{
			ResultSet rs =dblogic.ApproveUserloan(id);
			if(rs.next()){
				System.out.println("hello");
				loginform.setId1(rs.getLong("ACCOUNTNO"));
				loginform.setLoan(rs.getString("LOANID"));
				loginform.setName(rs.getString("CATAGORY"));
				loginform.setPhone(rs.getLong("INTEREST"));
				loginform.setDaccno(rs.getLong("GUARENTORACCOUNTNO"));
				System.out.println("hello1");
				loginform.setOccupation(rs.getString("REASONFORLOAN"));
				loginform.setAddress(rs.getString("MODGADGEITEM"));
				loginform.setIssuedate(rs.getString("issueddate"));
				System.out.println("hello2");
				loginform.setStatus(rs.getString("STATUS"));
				loginform.setAmount(rs.getString("ANNUALINCOME"));
				
				request.setAttribute("key",loginform);
				RequestDispatcher rd=request.getRequestDispatcher("/Approve N Reject Customer For Accountloan.jsp");
				rd.forward(request,response);
				
			}
			}
			catch(Exception e)
			{
				System.out.println(e);
			}
			
			//return mapping.findForward("approve");
			
		}
		
		
		if(Approvel!=null)
		{
			
			
			
			DBLogic dblogic = new DBLogic();
			String id1 = request.getParameter("id1");
			
			Long id = Long.parseLong(id1);
			String issueddate=request.getParameter("issueddate");
			String interest=request.getParameter("interest");
			System.out.println("ID: "+id);
			int i=0;
			try
			{
				
			i = dblogic.Approvedl(id,issueddate,interest);
			
			
			System.out.println("Appoved:"+i);
		//return mapping.findForward("approve1");
			response.sendRedirect("Admin Home.jsp");
			
			
			}
			catch (Exception e) {
				// TODO: handle exception
			}
			
			
			
			
		}
		if(Rejectl!=null)
		{
			DBLogic dblogic = new DBLogic();
			String id1 = request.getParameter("id1");
			Long id = Long.parseLong(id1);
			String issueddate=request.getParameter("issueddate");
			String interest=request.getParameter("interest");
			System.out.println("ID"+id);
			int i=0;
			try
			{
			i = dblogic.Rejectedl(id,issueddate,interest);
			System.out.println("Deleted:"+i);
			//return mapping.findForward("reject");
			response.sendRedirect("Admin Home.jsp");
			}
			catch(Exception e)
			{
			}
			
			
		}
		
		
		
		
		
		
		
		
		
		
		
		
		if(AddLoan!=null)
	{
		
		System.out.println("add 1");
		DBLogic dblogic=new DBLogic();
		String category=request.getParameter("category");
		String rate=request.getParameter("rate");
		String date=request.getParameter("date");
		String amount=request.getParameter("amount");
		
		System.out.println(category+rate+date+amount);
		int i=0;
		try
		{
		i=dblogic.newAddloan(category,rate,date,amount);
		System.out.println("i");
		response.sendRedirect("Admin Home.jsp");
		}
		catch(Exception e)
		{
			
		}
	}
	if(Update!=null)
	{
		DBLogic dblogic = new DBLogic();
		
		long id=Long.parseLong(request.getParameter("id1"));
		System.out.println("LOANID: "+id);
		String category = request.getParameter("category");
		String rate =request.getParameter("rate");
		String date =request.getParameter("date");
		String amount = request.getParameter("amount");
			
		int i = 0;
		try
		{
		i = dblogic.UpdateLoan(category,rate,date,amount,id);
		if(i>0)
		{
			response.sendRedirect("Admin Home.jsp");
		}
		}
		catch (Exception e) {
			
		}
	}
	if(Noticedetail!=null)
	{
		System.out.println("noticedetail");
		LoginForm loginForm =new LoginForm();
		DBLogic dblogic=new DBLogic();
		ArrayList<String> id=new ArrayList<String>();
		/*ArrayList<String> subject=new ArrayList<String>();*/
		try
		{
		ResultSet rs=dblogic.Noticedetail();
		while(rs.next())
		{
			id.add(Long.toString(rs.getLong("NOTICENO")));
			/*subject.add(rs.getString("SUBJECT"));*/
			System.out.println("Id is "+id);
		}
		HttpSession ses=request.getSession();
		ses.setAttribute("ID4", id);
		/*request.setAttribute("SUBJECT", subject);*/
		//return mapping.findForward("Noticedetailadded");
		RequestDispatcher rd=request.getRequestDispatcher("/Delete Notice.jsp");
		rd.forward(request,response);
		}
		catch (Exception e) {
			// TODO: handle exception
		}
	}
	if(AddNotice!=null)
	{
		LoginForm loginForm =new LoginForm();
		Long receiveraccountno=null;
		String subject=request.getParameter("subject");
		String content=request.getParameter("content");
		Long account=Long.parseLong(request.getParameter("account"));
		String from=request.getParameter("from");
		DBLogic dblogic=new DBLogic();
		try
		{
		int i=dblogic.AddNotice(subject,content,account,from);
		if(i>0)
		{
			String msg="Notice Added Successfully";
			loginForm.setMsg(msg);
			response.sendRedirect("Admin Home.jsp");
				
		}else
		{
		
	}
		}
		catch (Exception e) {
			// TODO: handle exception
		}
	
	
	
	}
	if(ViewNoticeDetails!=null)
	{
		LoginForm loginForm =new  LoginForm();
		DBLogic dblogic= new DBLogic();
		String nid=request.getParameter("noticeid");
		Long id=Long.parseLong(nid);
		System.out.println("Inside View Notice details....."  +id);
		try
		{
		ResultSet rs=dblogic.ViewNoticeDetails(id);
		if(rs.next())
		{
			System.out.println("okok");
			loginForm.setId(rs.getString("NOTICENO"));
			loginForm.setSubject(rs.getString("subject"));
			loginForm.setContent(rs.getString("content"));
			loginForm.setAccount(rs.getString("RECEIVERACCOUNTNO"));
			loginForm.setDate(rs.getString("NOTICEDATE"));
			System.out.println("hello");
		}
		//HttpSession ses=request.getSession();
		request.setAttribute("key",loginForm);
		//return Noticedetail(mapping,form,request,response);
		RequestDispatcher rd=request.getRequestDispatcher("/Delete Notice.jsp");
		rd.include(request,response);
		//response.sendRedirect("Delete Notice.jsp");
	}
		catch (Exception e) {
			// TODO: handle exception
		}
	}
	
	if(DelNotice!=null)
	{
		LoginForm loginForm=new LoginForm();
		Long nid=Long.parseLong(request.getParameter("noticeid"));
		System.out.println(nid);
		String subject=request.getParameter("subject");
		String content=request.getParameter("content");
		Long account=Long.parseLong(request.getParameter("account"));
		String date=request.getParameter("date");
		try
		{
		DBLogic dblogic=new DBLogic();
		int i=dblogic.DelNotice(nid,subject,content,account,date);
		
	
	if(i>0)
	{
		String msg="Notice Deleted Successfully";
		loginForm.setMsg(msg);
		//return Noticedetail(mapping,form,request,response);
		response.sendRedirect("UserHome.jsp");
			
	}else
	{
		String msg="Deletion Cancelled";
		loginForm.setMsg(msg);
		//return Noticedetail(mapping,form,request,response);
		response.sendRedirect("Admin Home.jsp");
	}
		}
		catch (Exception e) {
			// TODO: handle exception
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	//user information
	
	
	
	
	
	
	
	
	
	
	
	
	
	if(ApplyToDelete!=null)
	{
		LoginForm loginForm =new LoginForm();// TODO Auto-generated method stub
		System.out.println("add 1");
		DBLogic dblogic=new DBLogic();
		String account=request.getParameter("account");
		String reason=request.getParameter("reason");
		System.out.println(account+reason);
		int i=0;
		try
		{
		i=dblogic.newApply(account,reason);
		System.out.println("i");
		response.sendRedirect("UserHome.jsp");
	}
		catch (Exception e) {
			// TODO: handle exception
		}
	
	}
	
	
	
	
	
	
	
	
	
	if(Deposite!=null)
	{
		System.out.println("okok1");
		LoginForm loginform =new LoginForm();
		System.out.println("okok2");
		DBLogic dblogic = new DBLogic();
		System.out.println("okok3");
		Long accountno=Long.parseLong(request.getParameter("account"));
		Long amount=Long.parseLong(request.getParameter("amount"));
		System.out.println("okok4");
		System.out.println(accountno);
		System.out.println(amount);
		try
		{
		ResultSet rs=dblogic.ValidAccountno(accountno);
		if(rs.next())
		{
			
			System.out.println("Valid Accountno");
			ResultSet rs1=dblogic.getBalanceInfo(accountno);
			if(rs1.next())
			{
				System.out.println("Having Some Balance");
				Long obal=rs1.getLong("balance");
				
				System.out.println(amount);
				
				Long fbal=obal+amount;
				System.out.println(fbal);
				int i=0;
				i=dblogic.UpdateBal(accountno,fbal);
				if(i>0){
					loginform.setMsg("Deposited Successfully");
					loginform.setBalance( fbal);
				}
					
			}else{
				int i=0;
			System.out.println("Having no  balance");
				i=dblogic.InsertBal(accountno, amount);
				if(i>0)
				{
					loginform.setBalance(amount);
					loginform.setMsg("Deposited Successfully");
				}
				
			}
		}else{
			String msg="Invalid Account No";
			loginform.setMsg(msg);
		}
		request.setAttribute("key","msg");
		request.setAttribute("key1", loginform);
		
		//return mapping.findForward("deposite");
		RequestDispatcher rd=request.getRequestDispatcher("/Cash Deposite.jsp");
		rd.forward(request,response);
		}
		catch (Exception e) {
			// TODO: handle exception
		}
		
	}
	if(Withdraw!=null)
	{
		
		
		
		LoginForm loginform =new LoginForm();
		DBLogic dblogic = new DBLogic();
		Long accountno=Long.parseLong(request.getParameter("account"));
		Long amount=Long.parseLong(request.getParameter("amount"));
		try
		{
		ResultSet rs=dblogic.ValidAccountno1(accountno);
		if(rs.next())
		{
			ResultSet rs1=dblogic.getBalanceInfo1(accountno);
			if(rs1.next())
			{
				Long obal=rs1.getLong("balance");
				Long fbal=obal-amount;
				int i=0;
				i=dblogic.UpdateBal1(accountno,fbal);
				if(i>0){
					loginform.setMsg("Money Withdrawn Successfully");
					loginform.setBalance(fbal);
				}
					
			}else{		
			String msg="Insufficient balance";
			loginform.setMsg(msg);
			}
		}else{
			String msg="Invalid Account No";
			loginform.setMsg(msg);
		}
		
	request.setAttribute("key1",loginform);
		
		//return mapping.findForward("deposite");
		RequestDispatcher rd=request.getRequestDispatcher("/Cash Withdrawal.jsp");
		rd.forward(request,response);
		
	}
		catch (Exception e) {
			// TODO: handle exception
		}
	}
	if(view!=null)
	{
		LoginForm loginform =new LoginForm();
		DBLogic dblogic = new DBLogic();
		Long accountno=Long.parseLong(request.getParameter("account"));
		System.out.println(accountno);
		try
		{
		ResultSet rs=dblogic.ValidAccountno2(accountno);
		System.out.println("accountno");
			if(rs.next())
		{
			
			System.out.println("kkkkkkkkk");
			ResultSet rs1=dblogic.getBalanceInfo2(accountno);
			System.out.println("balance");
			if(rs1.next())
			{
			Long balance=rs1.getLong("BALANCE");
			loginform.setBalance(balance);
			}
			request.setAttribute("key1",loginform);
			RequestDispatcher rd=request.getRequestDispatcher("/View Balance.jsp");
			rd.forward(request,response);
	}

	
		
		
		}
		catch (Exception e) {
			// TODO: handle exception
		}
		
	
	}
	if(Transfer!=null)
	{
		LoginForm loginForm =new LoginForm();
		
	Long saccno=Long.parseLong(request.getParameter("saccno"));
	Long daccno=Long.parseLong(request.getParameter("daccno"));
	Long amount=Long.parseLong(request.getParameter("amount"));
	int a=0;
	DBLogic dblogic=new DBLogic();
	try
	{
	ResultSet rs=dblogic.checkAccountno(saccno);
	if(rs.next())
	{
		        System.out.println("okok");
		       ResultSet rs1=dblogic.checkAccountno(daccno);
		        if(rs1.next())
		        {
			             System.out.println("okok1");
			              ResultSet rs2=dblogic.retriveBalance(saccno);
			              if(rs2.next())
			              {
				            System.out.println("okok2");
			                Long accbal=rs2.getLong("BALANCE");
			                if(accbal>amount)
			                {
				                Long finalbalance=accbal-amount;
			                      ResultSet rs4=dblogic.retriveBalance(daccno);
		                  	      if(rs4.next())
			                    {
		                  	    	  System.out.println("okok4");
		                  	    	  Long dbal=rs4.getLong("balance");
		                  	    	  Long dfinalbal=dbal+amount;
		                  	    	  int   ctr=dblogic.updateBalance(daccno, dfinalbal);
		                  	    	  int ctr1=dblogic.updateBalance1(saccno,finalbalance);
		                  	    	  if(ctr>0&&ctr1>0)
			                         {
		                  	    		  String msg="Money Transferred Successfully";
		                  	    		  loginForm.setBalance(finalbalance);
		                  	    		  loginForm.setMsg("Money Transferred Successfully");
		                  	    		  loginForm.setAccount(null);
		                  	    		  loginForm.setAmount(null);
		                  	    		  System.out.println("okok7");
		                  	    		  request.setAttribute("key",loginForm);
		                  	    		  RequestDispatcher rd=request.getRequestDispatcher("/Money Transefer.jsp");
		                  	    		  rd.forward(request,response);
			                         	}
			                        else
			                          {
		                            String msg="Money Transfer Failed";
		                             loginForm.setMsg(msg);
		
		                             request.setAttribute("key",loginForm);
		                              RequestDispatcher rd=request.getRequestDispatcher("/Money Transefer.jsp");
		                              rd.forward(request,response);
		                              System.out.println("okok8");
		                              }
		               	        }
		                  }
		                 else{
		                	 System.out.println("insufficient");
				          String msg="Insufficient Balance";
				          loginForm.setMsg(msg);
				          request.setAttribute("key",loginForm);
                          RequestDispatcher rd=request.getRequestDispatcher("/Money Transefer.jsp");
                             rd.forward(request,response);
			                 }
			              }
		}
		
	}else{
			String msg="Invalid Account no";
			loginForm.setMsg(msg);
			System.out.println("okok9");
			request.setAttribute("key",loginForm);
			RequestDispatcher rd=request.getRequestDispatcher("/Money Transefer.jsp");
			rd.forward(request,response);
		}
		String msg="Money Transfer Cancelled. TRy Again";
		loginForm.setMsg(msg);
		request.setAttribute("key",loginForm);
		RequestDispatcher rd=request.getRequestDispatcher("/Money Transefer.jsp");
		rd.forward(request,response);
		System.out.println("okok10");
		
	}
	catch (Exception e) {
		// TODO: handle exception
	}
	}
	if(RetrieveLoan!=null)
	{
		LoginForm loginForm=new LoginForm();
		ArrayList<String> id=new ArrayList<String>();
		ArrayList<String> category1=new ArrayList<String>(); 
		try
		{
		DBLogic db=new DBLogic();
		ResultSet rs=db.retriveLoanDetails();
		while(rs.next())
		{
			Long loanid=rs.getLong("LOANID");
			String category=rs.getString("CATEGORY");
			id.add(Long.toString(loanid));
			category1.add(category);
		}
		request.setAttribute("LOANID", id);
		request.setAttribute("CATEGORY",category1);
		
		RequestDispatcher rd=request.getRequestDispatcher("/Loan Application.jsp");
		rd.forward(request,response);
		}
		catch (Exception e) {
			// TODO: handle exception
		}
	}
	if(ApplyForLoan!=null)
	{
		System.out.println("hello");
		LoginForm loginForm =new LoginForm();
		Long loanid=Long.parseLong(request.getParameter("id"));
		String category=null;
		Long roi=0l;
		Long account=Long.parseLong(request.getParameter("account"));
		String date=request.getParameter("date");
		Long gaccno=Long.parseLong(request.getParameter("gaccno"));
		String item=request.getParameter("item");
		String reason=request.getParameter("reason");
		String occupation=request.getParameter("occupation");
		Long income=Long.parseLong(request.getParameter("income"));
		Long amount=Long.parseLong(request.getParameter("amount"));
		Long time=Long.parseLong( request.getParameter("time"));
		
		String issuedate=request.getParameter("");
		String status="Not Sanctioned";
		
		DBLogic dblogic=new DBLogic();
      try
      {
		ResultSet rs=dblogic.retrivedLoan(loanid);
		System.out.println("hello1");
		while(rs.next())
		{
			System.out.println("hello2");
			category=rs.getString("category");
			Long rate=Long.parseLong(rs.getString("RATEOFINTEREST"));
		}
		System.out.println("hello3");
		int i=dblogic.applyLoan(loanid,account,date,gaccno,item,reason,occupation,income,issuedate,status,time,amount,category,roi);
		if(i>0)
		{System.out.println("hello4");
			String msg="Loan Applied Successfully";
			loginForm.setMsg(msg);
			//return RetrieveLoan(mapping,form,request,response);
			response.sendRedirect("UserHome.jsp");
		}else
		{
			System.out.println("hello4");
			String msg="transaction failed";
			loginForm.setMsg(msg);
			//return RetrieveLoan(mapping,form,request,response);	}
	response.sendRedirect("UserHome.jsp");
      }
      }
      catch (Exception e) {
		// TODO: handle exception
	}
      }
	if(Viewprofile!=null)
	{
		
	}
	
	if(AnyNotice!=null)
	{
		System.out.println("anynotice 1");
		LoginForm loginForm =new  LoginForm();
		DBLogic dblogic=new DBLogic();
		
		Long account=Long.parseLong(request.getParameter("account"));
		System.out.println("anynotice 2");
		ArrayList<LoginForm> alist=new ArrayList<LoginForm>();
		try
		{
		ResultSet rs=dblogic.view(account);
		while(rs.next())
		{
			System.out.println("anynotice 3");
		LoginForm lf=new LoginForm();
		lf.setId1(rs.getLong("noticeno"));
		lf.setSubject(rs.getString("subject"));
		lf.setContent(rs.getString("content"));
		System.out.println("anynotice 4");
		lf.setAccount(rs.getString("receiveraccountno"));
		lf.setDate(rs.getString("noticedate"));
		alist.add(lf);
		System.out.println("anynotice 5");
		}
		request.setAttribute("LIST", alist);
		//return mapping.findForward("view");
		System.out.println("anynotice 6");
		RequestDispatcher rd=request.getRequestDispatcher("/View Notice1.jsp");
		rd.forward(request,response);
		}
		catch (Exception e) {
			// TODO: handle exception
		}
		
		}
	if(Deletion!=null)
	{
		LoginForm loginForm =new  LoginForm();
		DBLogic dblogic=new DBLogic();
		String id = request.getParameter("id1");
		Long id1=Long.parseLong(id);
		//String id1=request.getParameter("id");
		//Long id=Long.parseLong("id1");
		System.out.println(id);
		int i=0;
		try
		{
		i=dblogic.Deletion(id);
		if(i>0)
		{
			String msg="Successfully deleted";
			loginForm.setMsg(msg);
			
			response.sendRedirect("UserHome.jsp");
		}else
		{
			String msg="Deletion Cancelled";
			loginForm.setMsg(msg);
				
		}
		}
		catch (Exception e) {
			// TODO: handle exception
		}
	}
	if(Viewprofile!=null)
	{
		
		String uname=request.getParameter("key1");
		
		System.out.println("rt");
		DBLogic dblogic = new DBLogic();
		LoginForm loginform =new LoginForm();
		String cename=request.getParameter("key");
		
		Long id=Long.parseLong(cename);
		System.out.println(id);
		try
		{
		ResultSet rs =dblogic.RetrieveUserProfile(id,uname);
		if(rs.next()){
			//loginform.setId1(rs.getLong("name"));
			loginform.setName(rs.getString("name"));
			loginform.setAddress(rs.getString("ADDRESS"));
			//loginform.setGender(rs.getString("GENDER"));
			loginform.setPhone(rs.getLong("PHONENO"));
			loginform.setEmail(rs.getString("EMAIL"));
			//loginform.setDesignation(rs.getString("DESIGNATION"));
			loginform.setOccupation(rs.getString("occupation"));
			loginform.setUname(rs.getString("username"));
			loginform.setPassword(rs.getString("password"));
			String a=rs.getString("username");
			String b=rs.getString("password");
			String c=rs.getString("name");
			System.out.println(a);
			System.out.println(b);
			System.out.println(c);
		}
		request.setAttribute("key",loginform);
		RequestDispatcher rd=request.getRequestDispatcher("/View Profile.jsp");
		rd.forward(request,response);
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
		
		
		
	}
	if(Editp!=null)
	{
		DBLogic dblogic = new DBLogic();
		String name = request.getParameter("name");
        String address =request.getParameter("address");
		String phone = request.getParameter("phone");
	     String email = request.getParameter("email");
		String occupation =request.getParameter("occupation");
		String uname = request.getParameter("uname");
		String pass= request.getParameter("password");
		HttpSession ses=request.getSession();
		String ss=ses.getAttribute("SL_NO").toString();
		int i = 0;
		try
		{
		i = dblogic.UpdateUserp(name,address,phone,email,occupation,uname,pass,ss);
		if(i>0)
		 {
			System.out.println("entry2");
		/*	RequestDispatcher rd=request.getRequestDispatcher("/Admin Home.jsp");
			rd.forward(request,response);*/
			response.sendRedirect("UserHome.jsp");
			
		}
		/*RequestDispatcher rd=request.getRequestDispatcher("/Admin Home.jsp");
		rd.forward(request,response);*/
		System.out.println("entry3");
		response.sendRedirect("UserHome.jsp");
		}
		catch (Exception e) {
			System.out.println(e);
		}
	}
	
	
	if(Editprofile!=null)
	{
String uname=request.getParameter("key1");
		
		System.out.println("rt");
		DBLogic dblogic = new DBLogic();
		LoginForm loginform =new LoginForm();
		String cename=request.getParameter("key");
		
		Long id=Long.parseLong(cename);
		System.out.println(id);
		try
		{
		ResultSet rs =dblogic.RetrieveUserProfile(id,uname);
		if(rs.next()){
			//loginform.setId1(rs.getLong("name"));
			loginform.setName(rs.getString("name"));
			loginform.setAddress(rs.getString("ADDRESS"));
			//loginform.setGender(rs.getString("GENDER"));
			loginform.setPhone(rs.getLong("PHONENO"));
			loginform.setEmail(rs.getString("EMAIL"));
			//loginform.setDesignation(rs.getString("DESIGNATION"));
			loginform.setOccupation(rs.getString("occupation"));
			loginform.setUname(rs.getString("username"));
			loginform.setPassword(rs.getString("password"));
			String a=rs.getString("username");
			String b=rs.getString("password");
			String c=rs.getString("name");
			System.out.println(a);
			System.out.println(b);
			System.out.println(c);
		}
		request.setAttribute("key",loginform);
		RequestDispatcher rd=request.getRequestDispatcher("/Edit Profile.jsp");
		rd.forward(request,response);
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
		
		
		
	}
	
}
	

}





